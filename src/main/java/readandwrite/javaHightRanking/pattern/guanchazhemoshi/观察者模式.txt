有趣的事情发生时可千万别错过  有了观察者 你将会消息灵通

出版者 + 订阅者 = 观察者模式

观察者模式定义了对象之间的一对多依赖，这样依赖当一个对象改变状态时，它所有的依赖者都会收到通知并自动更新

java提供内置的观察者模式

在观察者模式中:会变的是主题的状态以及观察者的数目和类型
用这个模式可以改变依赖于主题状态的对象 却不必改变主题 [called 提起规划]

主题与观察者都使用接口:
    观察者利用主题的接口向主题注册
    主题通过观察者的借口通知观察者
    可以让两者之间运作正常 同时又有松散耦合的特点

观察者模式利用‘组合’将许多观察者组合进主题中。
对象之间的关系不是通过继承产生的 而是在运行时通过组合的方式产生的

不要依赖于观察者被通知的次序

java.util.Observable的黑暗面:
    Observable 是一个类 必须设计一个类继承他 这样就不能再继承其他类 如果一个类想同时具有Observable和
    另外一个超类的行为，就会陷入两难